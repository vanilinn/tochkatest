version: "3.9"

volumes:
  postgres_data:
  pgadmin_data:
  minio_data:

services:
  db:
    container_name: tz_db
    image: postgres:13.0
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}

  pgadmin:
    container_name: tz_pgadmin
    image: dpage/pgadmin4
    restart: always
    volumes:
      - pgadmin_data:/var/lib/postgresql/data/
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    depends_on:
      - db
    ports:
      - "5050:80"

  app:
    container_name: tz_app
    build: .
    restart: always
    command: bash -c "alembic upgrade head && uvicorn src.main:app --proxy-headers --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/src
    depends_on:
      db:
        condition: service_healthy

  nginx:
    container_name: tz_nginx
    image: nginx:1.21.3-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

  rabbitmq:
    image: rabbitmq:3.13.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASSWORD}
    ports:
      - "15672:15672"

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_password
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  celery_worker:
#    image: celery
    build: .
    command: celery -A src.celery_app worker --loglevel=debug
    volumes:
      - .:/src
    working_dir: /src
    depends_on:
      - rabbitmq
      - db


